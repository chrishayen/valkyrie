name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - arch: amd64
            runner: ubuntu-latest
            odin_target: linux_amd64
          - arch: arm64
            runner: ubuntu-24.04-arm
            odin_target: linux_arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Build
        run: |
          mkdir -p build
          nix develop --command odin build . -o:speed -target:${{ matrix.odin_target }} -extra-linker-flags:"-static -static-libgcc -lwolfssl" -out:build/valkyrie

      - name: Verify binary
        run: |
          file build/valkyrie
          ls -lh build/valkyrie
          ldd build/valkyrie || echo "Binary is statically linked (expected)"

      - name: Create tar.gz archive
        run: |
          tar czf build/valkyrie-${{ matrix.arch }}.tar.gz -C build valkyrie -C .. dev.crt dev.key

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: valkyrie-${{ matrix.arch }}
          path: build/valkyrie-${{ matrix.arch }}.tar.gz

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download amd64 archive
        uses: actions/download-artifact@v4
        with:
          name: valkyrie-amd64
          path: ./artifacts

      - name: Download arm64 archive
        uses: actions/download-artifact@v4
        with:
          name: valkyrie-arm64
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/valkyrie-amd64.tar.gz
            artifacts/valkyrie-arm64.tar.gz
          generate_release_notes: true
          draft: false
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') || contains(github.ref_name, 'dev') }}
